- The data file is broken down into transactions, which are composed of
  one or more records.

- Atomic transactions are ensured by the initial "data flag" on each
  transaction.

- Each transaction consists of a control header followed by zero or more
  records, followed by a CRC.

- The transaction immediately following the last one is marked as empty.

- Data from multiple records are concatenated into one transaction.

File Header Format:
- Constant string (8 bytes): "journald"
- Version (1)
- File number (starts at zero)

Record Format:
- Record type (single byte):
  NUL == end of journal, anything else means a potentially valid transaction
  I == stream information
  D == data record for the given stream
  O == first and last record (once) for the given stream
  E == end of the records for the given stream
  A == abort record
- Stream number
- Record number
- Record data length
- Record data
- A 128-bit MD4 hash on all the data from the non-zero value of the
  record type flag to the last byte of the record data.

- All record types (except "A") may contain data.

- The first record in a transaction is initially marked with a NUL
  record type, which is restored after the rest of the data is sync'ed
  to disk (two-pass algorithm).

- The stream number is a sequential marker that starts at zero when the
  server starts up, and may not be zero for the first record in the
  file.

- The record number is a sequential marker that starts at zero for each
  new stream.

- Possible sequences of record types:
  I O
  I D* E
  I D* A

- Unless otherwise noted, all the above numbers are represented as a
  4-byte binary value, MSB first.

- All strings are prefixed with their length

- The stream information record always has a record number of zero, and
  do not affect the record numbering of other records.  It contains the
  current offset for that stream followed by the identifier string
  supplied by the client.

- The stream information record for a given stream will always precede
  any data records for that stream within an individual journal file.

- The following "magic" entries can be used to identify journald files:
0	string		journald	Journald file
>8	belong		x		version %d
>12	belong		x		(file #%ld)
